@model VentaAutos.Models.TVenta

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TVenta</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.IdCliente, "IdCliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCliente", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Placa, "Placa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Placa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Placa, "", new { @class = "text-danger" })
                <label id="lblMontoComprado"> </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Monto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control datepicker", @Value = @DateTime.Now.ToShortDateString() } })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTipoVenta, "IdTipoVenta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 checkbox">
                <input type="checkbox" data-toggle="toggle" data-on="Financiamiento" data-off="Contado" id="ckTipoVenta">
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.Saldo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Saldo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Saldo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IdTipoVenta, "IdTipoVenta", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("IdTipoVenta", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdTipoVenta, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Interes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Interes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Interes, "", new { @class = "text-danger" })
                </div>
            </div>*@



        @*<div class="form-group">
                @Html.LabelFor(model => model.Financiamiento.Plazo, "Plazo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Financiamiento.Plazo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Financiamiento.Plazo, "", new { @class = "text-danger" })
                </div>
            </div>*@


        <div class="col-sm-6 col-sm-offset-1" id="datosFinanc" style="display:none">
            @*<h2>Datos Financiamiento</h2>*@
            <div class="panel-group">
                <div class="panel panel-primary">
                    <div class="panel-heading">Datos Financiamiento</div>
                    <div class="panel-body">
                        <label>Monto Financiamiento: </label> <label id="lblMontoFinanc"></label> <br />
                        <label>Taza Interés: </label> <label id="lblTaza"></label> <br />
                        <label>Monto Mensual: </label> <label id="lblMontoMensual"></label> <br />
                        <label>Plazo: </label> <label id="lblPlazo"></label>
                    </div>
                </div>


            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                <input type="submit" value="Guardar" class="btn btn-default" id="Guardar" />
            </div>
        </div>


        <div class="container">
            @*<h2>Financiamiento</h2>
                <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#modalFinanc">Open Modal</button>*@

            <!-- Modal -->
            <div class="modal fade" id="modalFinanc" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Financiamiento</h4>
                        </div>

                        <div class="modal-body">
                            <!-- The form is placed inside the body of modal -->
                            <form id="loginForm" method="post" class="form-horizontal">

                                <div class="form-group">
                                    <label for="MontoVenta" class="control-label col-md-2">Monto Venta</label>
                                    <div class="col-md-10">
                                        <input type="text" id="MontoVenta" name="MontoVenta" class="form-control" disabled>
                                    </div>


                                </div>

                                <div class="form-group">
                                    <label for="Saldo" class="control-label col-md-2">Monto Financ.</label>
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.Saldo, new { htmlAttributes = new { @type = "number", @class = "form-control" } })*@
                                        <input type="text" id="Saldo1" name="Saldo1" class="form-control">
                                        @Html.ValidationMessageFor(model => model.Saldo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Interes, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @*@Html.EditorFor(model => model.Interes, new { htmlAttributes = new { @type = "number", @class = "form-control" } })*@
                                        <input type="number" step="0.01" id="Interes1" name="Interes1" class="form-control">
                                        @Html.ValidationMessageFor(model => model.Interes, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="MontoMensual" class="control-label col-md-2">Monto Mensual</label>
                                    <div class="col-md-10">
                                        <input type="text" id="MontoMensual" name="MontoMensual" class="form-control">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="Plazo" class="control-label col-md-2">Plazo</label>
                                    <div class="col-md-10">
                                        <input type="text" id="Plazo1" name="Plazo1" class="form-control" readonly>
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary" data-dismiss="modal">Cerrar</button>
                                </div>

                            </form>
                        </div>
                    </div>

                </div>
            </div>

        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Content/bootstrap-select.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
    <link href="~/Content/bootstrapValidator.min.css" rel="stylesheet" />
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/bootstrapValidator.min.js"></script>
    <script src="~/Scripts/bootstrap-select.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/bootstrap-toggle.js"></script>
    <script src="~/Scripts/mask.js"></script>
    <script src="~/Scripts/jquery.formatCurrency-1.4.0.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.validate.globalize.js"></script>
    <script src="~/Scripts/globalize.js"></script>
    <script src="~/Scripts/jquery.maskMoney.js"></script>

    <script type="text/javascript">
        //variables

        $(function () { // will trigger when the document is ready
            $('.datepicker').datepicker({
                dateFormat: 'dd/mm/yyyy',
                showButtonPanel: true,
                changeMonth: true,
                changeYear: true,
                defaultDate: new Date(),
                format: 'dd/mm/yyyy',
                startDate: new Date()

            });

            $("#Monto").maskMoney();
            $("#MontoMensual").maskMoney();
            $("#Saldo1").maskMoney();

            //cargar lblMontoComprado cuanda carga la pagina
            var placaCarga = $('#Placa').find(":selected").val(); // pplaca}
            if (!$.isEmptyObject(placaCarga)) {
                $.post("@Url.Action("GetVehiculo", "Vehiculos")", { placa: placaCarga }, function (data) {
                    if (data == null || data.length === 0) {
                        $('#lblMontoComprado').text("No se logro recuoerar el monto en el que fue adquirido el vehículo");
                    }
                    else {
                       // var dat = JSON.parse(data);
                        $('#lblMontoComprado').text("Este Vehículo fue comprado en: " + data["Monto"]);
                    }

                 });

            }

            $.validator.methods.date = function (value, element) {
                Globalize.culture("en-AU"); // the UK format
                return this.optional(element) || Globalize.parseDate(value) !== null;
            }


            ////////******eventos***///////////////

            //guardar
            $("#Guardar").click(function () {

                var montoVenta = $('#Monto').val();
                var idTipoVenta = $("#ckTipoVenta").prop('checked');// pidTipoVenta
                var idCliente = $('#IdCliente').find(":selected").val();// pidCliente
                var placa = $('#Placa').find(":selected").val(); // pplaca
                var fecha = $('#Fecha').val(); // pfecha
                var plazo = -1
                var montoFinanc = -1
                var taza = -1
                var montoMensual = -1
                    if (idTipoVenta == true) {
                        idTipoVenta = 2; //si esta en true es fiananciamiento y en bd financiamiento es id = 2
                        plazo = $('#lblPlazo').html(); // *pplazo
                        montoFinanc = $('#lblMontoFinanc').html(); // psaldo
                        taza = $('#lblTaza').html(); // pinteres
                        montoMensual = $('#lblMontoMensual').html(); // pmonto
                    }
                    else
                        idTipoVenta = 1;
                        //llamar funcion
                        $.post("@Url.Action("InsertarVentaFinanciamiento", "Ventas")", {
                            pmonto: montoVenta, pfecha: fecha, pidTipoVenta: idTipoVenta, pidCliente: idCliente,
                            psaldo: montoFinanc, pplaca: placa, pinteres: taza, pplazo: plazo
                        }, function (data) {
                            alert('Insertando Venta... ');
                            if (data != null) {
                                if (data == 'True') {
                                    alert('La venta se insertó correctamente!');
                                    var url = '@Url.Action("Index", "Ventas")';
                                    window.location.href = url;
                                }
                                else {
                                    alert('ocurrio un error procesando la venta');
                                }

                            }
                            else {
                                alert('ocurrio un error procesando la venta');
                            }
                        });

        });


            //cerrar modal financiamiento
            $('#modalFinanc').on('hidden.bs.modal', function () {
                $('#modalFinanc').data('bootstrapValidator').validate();
                mostrarDatosFinanciamiento();
               //$('#modalFinanc').modal('hide');
                //$('#modalFinanc').bootstrapValidator('resetForm', true);
                //$(this).removeData('bs.modal');
                //$('#modalFinanc .modal-content').empty();
            })

            //evento levantar modal al hacer clic en financiamiento
            $('input[type="checkbox"]').on('change', function (e) {
                if (e.target.checked) {
                    $('#MontoVenta').val($('#Monto').val());
                    $('#modalFinanc').modal();
                }
                else {
                    mostrarDatosFinanciamiento();
                }
            });

            //culcular plazo en base a: monto a pagar, saldo, interes
            $('#MontoMensual').blur(function () {
                $('#modalFinanc').data('bootstrapValidator').validate();
                var Cuota = parseFloat($(this).val().split(",").join("")) ;
                var Taza = $('#Interes1').val();
                var Monto = parseFloat($('#Saldo1').val().split(",").join(""));
                //alert('params: ' + Cuota + ' ' + Taza + ' ' + Monto);
                var interes = Monto * (Taza / 100);
                if (Cuota > interes) {
                    $.post("@Url.Action("CantidadCuotas", "Ventas")", { Monto: Monto, Taza: Taza, Cuota: Cuota }, function (data) {
                        if (data != null) {
                            var tiempo = (data / 12 | 0) + " años y " + data % 12 + " meses";
                            $('#Plazo1').val(data + " Meses (" + tiempo +")");
                        }
                    });
                }
                else { alert('La cuota debe ser mayor al interés. El interes es de: '+ interes );}
            });


            //evento cambio de placa
            $("#Placa").change(function () {
                var placaCarga = $('#Placa').find(":selected").val();
                $('#lblMontoComprado').empty();
                $.post("@Url.Action("GetVehiculo", "Vehiculos")", { placa: placaCarga }, function (data) {
                    if (data == null || data.length === 0) {
                        $('#lblMontoComprado').text("No se logro recuoerar el monto en el que fue adquirido el vehículo");
                    }
                    else {
                       // var dat = JSON.parse(data);
                        $('#lblMontoComprado').text("Este Vehículo fue comprado en: " + data["Monto"]);
                    }

                 });

            });


            $('#modalFinanc').bootstrapValidator({
                framework: 'bootstrap',
                excluded: ':disabled',
                icon: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Saldo1: {
                        validators: {
                            notEmpty: {
                                message: 'El Saldo es requerido'
                            }//,
                            //integer: {
                            //    message: 'El Saldo debe ser numero'
                            //}
                        }
                    },
                    Interes1: {
                        validators: {
                            notEmpty: {
                                message: 'El Interés es requerido'
                            }//,
                            //integer: {
                            //    message: 'El Interés debe ser numero'
                            //}
                        }
                    }
                    ,
                    MontoMensual: {
                        validators: {
                            notEmpty: {
                                message: 'El Monto Mensual es requerido'
                            }//,
                            //integer: {
                            //    message: 'El monto debe ser numero'
                            //}
                        }
                    }
                }
            });



        }); //fin carga jquery

         ////////******fin eventos***///////////////


        ////////******funciones***///////////////

        function mostrarDatosFinanciamiento() {
            var x = document.getElementById("datosFinanc");
            //if (x.style.display === "none") {
            //    document.getElementById('lblMontoFinanc').innerHTML = document.getElementById('Saldo1').value;
            //    x.style.display = "block";
            //} else {
            //    x.style.display = "none";
            //}

            if ($("#ckTipoVenta").prop('checked')) {//si esta chequiado es funanciamiento y hay que mostrar
                document.getElementById('lblMontoFinanc').innerHTML = document.getElementById('Saldo1').value;
                document.getElementById('lblTaza').innerHTML = document.getElementById('Interes1').value;
                document.getElementById('lblMontoMensual').innerHTML = document.getElementById('MontoMensual').value;
                document.getElementById('lblPlazo').innerHTML = document.getElementById('Plazo1').value;

                x.style.display = "block";
            }
            else {
                x.style.display = "none";
            }

        }

         ////////******funciones***///////////////





    </script>
}
